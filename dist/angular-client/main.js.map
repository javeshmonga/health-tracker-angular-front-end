{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about-us/about-us.component.css","webpack:///./src/app/about-us/about-us.component.html","webpack:///./src/app/about-us/about-us.component.ts","webpack:///./src/app/admin-page/admin-page.component.css","webpack:///./src/app/admin-page/admin-page.component.html","webpack:///./src/app/admin-page/admin-page.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/contact-us/contact-us.component.css","webpack:///./src/app/contact-us/contact-us.component.html","webpack:///./src/app/contact-us/contact-us.component.ts","webpack:///./src/app/day/day.component.css","webpack:///./src/app/day/day.component.html","webpack:///./src/app/day/day.component.ts","webpack:///./src/app/days-list/days-list.component.css","webpack:///./src/app/days-list/days-list.component.html","webpack:///./src/app/days-list/days-list.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/poc/poc.component.css","webpack:///./src/app/poc/poc.component.html","webpack:///./src/app/poc/poc.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/schedule-list/schedule-list.component.css","webpack:///./src/app/schedule-list/schedule-list.component.html","webpack:///./src/app/schedule-list/schedule-list.component.ts","webpack:///./src/app/schedule/schedule.component.css","webpack:///./src/app/schedule/schedule.component.html","webpack:///./src/app/schedule/schedule.component.ts","webpack:///./src/app/services/day.service.ts","webpack:///./src/app/services/schedule.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/services/widget.service.ts","webpack:///./src/app/widget-list/widget-list.component.css","webpack:///./src/app/widget-list/widget-list.component.html","webpack:///./src/app/widget-list/widget-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".header {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\n.footer {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\na{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\ni{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nlabel{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nbody{\\r\\n  background-image: url(\\\"http://www.baltana.com/files/wallpapers-5/Health-Quotes-HD-Wallpapers-16018.jpg\\\");\\r\\n}\\r\\n\"","module.exports = \"<header class=\\\"modal-header header\\\">\\n\\n  <nav class=\\\"navbar-dark na\\\">\\n    <a routerLink=\\\"home\\\" class=\\\"btn btn-link nav-item\\\">Home</a>\\n    <a routerLink=\\\"/login\\\" *ngIf=\\\"user.username == ''\\\" class=\\\"btn btn-link nav-item\\\">Login</a>\\n    <a *ngIf=\\\"user.username == ''\\\" routerLink=\\\"/register\\\" class=\\\"btn btn-link nav-item\\\">Register</a>\\n    <a *ngIf=\\\"user.username != ''\\\" routerLink=\\\"/profile\\\" class=\\\"btn btn-link nav-item\\\">Profile</a>\\n    <a *ngIf=\\\"user.userType == 'Trainer' || user.userType == 'Admin'\\\" routerLink=\\\"/schedules\\\" class=\\\"btn btn-link nav-item\\\">Schedules</a>\\n    <a *ngIf=\\\"user.userType == 'Member'\\\" routerLink=\\\"/schedule/{{user.schedule.id}}\\\" class=\\\"btn btn-link nav-item\\\">My Schedule</a>\\n    <a href=\\\"#\\\" *ngIf=\\\"user.userType == 'Admin'\\\" routerLink=\\\"/admin\\\" class=\\\"btn btn-link nav-item\\\">Users</a>\\n    <a routerLink=\\\"/contact_us\\\" class=\\\"btn btn-link nav-item\\\">Contact Us</a>\\n  </nav>\\n\\n  <label *ngIf=\\\"user.username != ''\\\" class=\\\"align-content-center\\\">Hi {{user.firstName}}</label>\\n\\n  <nav class=\\\"float-right\\\">\\n    <a *ngIf=\\\"user.username != ''\\\" class=\\\"nav-item btn btn-link\\\" (click)=\\\"logout()\\\" routerLink=\\\"/login\\\">Logout</a>\\n  </nav>\\n</header>\\n\\n<div class=\\\"container\\\">\\n  <h2 style=\\\"font-family: 'Cambria'\\\">Welcome to Health Buddy</h2>\\n  <p class=\\\"col-4\\\" style=\\\"font-family: 'Cambria'\\\" >Good nutrition is the key to good mental and physical health. Eating a balanced diet is an important part of good health for everyone. The kind and amount of food you eat affects the way you feel and how your body works.</p>\\n  <p class=\\\"col-4\\\" style=\\\"font-family: 'Cambria'\\\"> We at Health buddy provide a platform for bringing together health and lifestyle preachers with the ones who seek their help in achieving their health goals. It is easy to use and anyone can sign up and enjoy the benefits of a healthy social network.</p>\\n  <p class=\\\"col-4\\\" style=\\\"font-family: 'Cambria'\\\">Register today and add any health requirements you might have to your profile, one of our trainers will respond by creating a descriptive schedule of certain days for you that will enable you to live a healthy lifestyle.</p>\\n  <p class=\\\"col-4\\\" style=\\\"font-family: 'Cambria'\\\">Our schedule will tell you about eating right and exercising regularly, if anytime you feel you need a change in your schedule and it is not working right for you, just update your requirements and a trainer will look into it and will update your schedule. Also, registered users get access to our Nutrition Teller App, which can be found in your schedule page. The Nutrition Teller App can be used to search for any food item of which you wish to know the nutrition of, The App will suggest possible food items as your search result and clicking on any one of them will tell you the nutrition that is present in that food item. You can use this when trying to achieve the nutrition goal recommended by our instructors in your schedule.</p>\\n  <p class=\\\"col-4\\\" style=\\\"font-family: 'Cambria'\\\">Get Ready to Live Healthy :)</p>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserServiceClient} from '../services/user.service';\nimport {Router} from '@angular/router';\nimport {ScheduleServiceClient} from '../services/schedule.service';\n\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.css']\n})\nexport class AboutUsComponent implements OnInit {\n\n  constructor(private scheduleService: ScheduleServiceClient,\n              private service: UserServiceClient,\n              private router: Router) {}\n\n  schedule;\n  user = {\n    username: '',\n    password: '',\n    userType: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    schedule: {\n      id: ''\n    }\n  };\n\n  ngOnInit() {\n    this.service\n      .profile()\n      .then(user =>\n        this.user = user);\n  }\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n\n}\n","module.exports = \".header {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\n.footer {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\na{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\ni{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nlabel{\\r\\n  color: white;\\r\\n}\\r\\n\"","module.exports = \"<div>\\r\\n  <header class=\\\"modal-header header\\\">\\r\\n\\r\\n    <nav class=\\\"navbar-dark na\\\">\\r\\n      <a routerLink=\\\"home\\\" class=\\\"btn btn-link nav-item\\\">Home</a>\\r\\n\\r\\n\\r\\n      <a routerLink=\\\"/profile\\\" class=\\\"btn btn-link nav-item\\\">Profile</a>\\r\\n      <a routerLink=\\\"/schedules\\\" class=\\\"btn btn-link nav-item\\\">Schedules</a>\\r\\n    </nav>\\r\\n\\r\\n    <label class=\\\"align-content-center\\\">Hi Admin</label>\\r\\n\\r\\n    <nav class=\\\"float-right\\\">\\r\\n      <a class=\\\"nav-item btn btn-link\\\" (click)=\\\"logout()\\\" routerLink=\\\"/login\\\">Logout</a>\\r\\n    </nav>\\r\\n  </header>\\r\\n  <br>\\r\\n  <div class=\\\"container\\\">\\r\\n  <ul>\\r\\n    <li class=\\\"row\\\">\\r\\n      <b class=\\\"col-2\\\">Username</b>\\r\\n      <b class=\\\"col-2\\\">First Name</b>\\r\\n      <b class=\\\"col-2\\\">Last Name</b>\\r\\n      <b class=\\\"col-2\\\">User Type</b>\\r\\n      <b class=\\\"col-2\\\">Email</b>\\r\\n    </li>\\r\\n  <br>\\r\\n    <li class=\\\"row\\\">\\r\\n      <input [(ngModel)]=\\\"user.username\\\" class=\\\"col-2 form-control\\\" placeholder=\\\"Enter Username\\\">\\r\\n      <input [(ngModel)]=\\\"user.firstName\\\" class=\\\"col-2 form-control\\\" placeholder=\\\"Enter First Name\\\">\\r\\n      <input [(ngModel)]=\\\"user.lastName\\\" class=\\\"col-2 form-control\\\" placeholder=\\\"Enter Last Name\\\">\\r\\n      <select [(ngModel)]=\\\"user.userType\\\" class=\\\"col-2 form-control\\\">\\r\\n        <option>Member</option>\\r\\n        <option>Trainer</option>\\r\\n      </select>\\r\\n      <input [(ngModel)]=\\\"user.email\\\" class=\\\"col-2 form-control\\\" placeholder=\\\"Enter Email ID\\\">\\r\\n      <button (click)=\\\"register(user)\\\" class=\\\"btn btn-success\\\">+</button>\\r\\n      <button (click)=\\\"update()\\\" class=\\\"btn btn-primary\\\">Save Update</button>\\r\\n    </li>\\r\\n  <br>\\r\\n    <div *ngFor=\\\"let user of users\\\">\\r\\n      <div *ngIf=\\\"user.userType != 'Admin'\\\">\\r\\n      <li class=\\\"row form-row\\\">\\r\\n        <div class=\\\"col-2\\\">\\r\\n          {{user.username}}\\r\\n        </div>\\r\\n        <div class=\\\"col-2\\\">\\r\\n          {{user.firstName}}\\r\\n        </div>\\r\\n        <div class=\\\"col-2\\\">\\r\\n          {{user.lastName}}\\r\\n        </div>\\r\\n        <div class=\\\"col-2\\\">\\r\\n          {{user.userType}}\\r\\n        </div>\\r\\n        <div class=\\\"col-2\\\">\\r\\n          {{user.email}}\\r\\n        </div>\\r\\n        <div>\\r\\n          <button (click)=\\\"deleteUser(user.id)\\\" class=\\\"btn btn-danger\\\">X</button>\\r\\n        </div>\\r\\n        <div>\\r\\n          <button (click)=\\\"populate(user)\\\" class=\\\"btn btn-link\\\">Populate Data</button>\\r\\n        </div>\\r\\n      </li>\\r\\n        <br>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ul>\\r\\n    <h6>Note: Default password for a user is the same as the username.</h6>\\r\\n</div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserServiceClient} from '../services/user.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-admin-page',\n  templateUrl: './admin-page.component.html',\n  styleUrls: ['./admin-page.component.css']\n})\nexport class AdminPageComponent implements OnInit {\n\n  constructor(private service: UserServiceClient,\n              private router: Router) { }\n\n  users;\n  user = {\n    username: '',\n    password: '',\n    userType: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    schedule: {\n      id: ''\n    }\n  }\n\n  ngOnInit() {\n    this.service.finAllUsers()\n      .then(users => this.users = users);\n  }\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n\n  populate(user) {\n    this.user = user;\n  }\n\n  update() {\n    this.service.updateUserByAdmin(this.user)\n      .then(response => {\n        if (response.username == null) {\n          alert('username does not exist');\n        }\n      })\n      .then(() => this.ngOnInit());\n  }\n\n  register(user) {\n    user.password = user.username;\n      this.service\n        .registerUserByAdmin(user)\n        .then(response => {\n          if (response.username == null) {\n            alert('username already exists');\n          } else {\n            this.ngOnInit();\n          }\n        });\n  }\n\n  deleteUser(id) {\n    this.service.deleteUser(id)\n      .then(() => this.ngOnInit());\n  }\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {FormsModule} from '@angular/forms';\nimport { PocComponent } from './poc/poc.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { ScheduleListComponent } from './schedule-list/schedule-list.component';\nimport { ScheduleComponent } from './schedule/schedule.component';\nimport { DaysListComponent } from './days-list/days-list.component';\nimport { DayComponent } from './day/day.component';\nimport {ScheduleServiceClient} from './services/schedule.service';\nimport {DayServiceClient} from './services/day.service';\nimport {routing} from './app.routing';\nimport {UserServiceClient} from './services/user.service';\nimport { WidgetListComponent } from './widget-list/widget-list.component';\nimport {WidgetServiceClient} from './services/widget.service';\nimport { AdminPageComponent } from './admin-page/admin-page.component';\nimport { AboutUsComponent } from './about-us/about-us.component';\nimport { ContactUsComponent } from './contact-us/contact-us.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PocComponent,\n    LoginComponent,\n    ProfileComponent,\n    RegisterComponent,\n    HomeComponent,\n    ScheduleListComponent,\n    ScheduleComponent,\n    DaysListComponent,\n    DayComponent,\n    WidgetListComponent,\n    AdminPageComponent,\n    AboutUsComponent,\n    ContactUsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing\n  ],\n  providers: [\n    ScheduleServiceClient,\n    DayServiceClient,\n    UserServiceClient,\n    WidgetServiceClient\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\r\nimport {HomeComponent} from './home/home.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {ScheduleListComponent} from './schedule-list/schedule-list.component';\r\nimport {ScheduleComponent} from './schedule/schedule.component';\r\nimport {PocComponent} from './poc/poc.component';\r\nimport {WidgetListComponent} from './widget-list/widget-list.component';\r\nimport {AdminPageComponent} from './admin-page/admin-page.component';\r\nimport {AboutUsComponent} from './about-us/about-us.component';\r\nimport {ContactUsComponent} from './contact-us/contact-us.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\r\n  { path: 'home', component: HomeComponent},\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'register', component: RegisterComponent},\r\n  { path: 'profile', component: ProfileComponent},\r\n  { path: 'schedules', component: ScheduleListComponent},\r\n  { path: 'about_us', component: AboutUsComponent},\r\n  { path: 'contact_us', component: ContactUsComponent},\r\n  { path: 'admin', component: AdminPageComponent},\r\n  { path: 'schedule/:scheduleId', component: ScheduleComponent},\r\n  { path: 'schedule/:scheduleId/poc', component: PocComponent},\r\n  { path: 'schedule/:scheduleId/day/:dayId/widget', component: ScheduleComponent},\r\n  { path: '**', component: HomeComponent} // last\r\n];\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n","module.exports = \".header {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\n.footer {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\na{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\ni{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nlabel{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nbody{\\r\\n  background-image: url(\\\"http://www.baltana.com/files/wallpapers-5/Health-Quotes-HD-Wallpapers-16018.jpg\\\");\\r\\n}\\r\\n\"","module.exports = \"<header class=\\\"modal-header header\\\">\\n\\n  <nav class=\\\"navbar-dark na\\\">\\n    <a routerLink=\\\"home\\\" class=\\\"btn btn-link nav-item\\\">Home</a>\\n    <a routerLink=\\\"/login\\\" *ngIf=\\\"user.username == ''\\\" class=\\\"btn btn-link nav-item\\\">Login</a>\\n    <a *ngIf=\\\"user.username == ''\\\" routerLink=\\\"/register\\\" class=\\\"btn btn-link nav-item\\\">Register</a>\\n    <a *ngIf=\\\"user.username != ''\\\" routerLink=\\\"/profile\\\" class=\\\"btn btn-link nav-item\\\">Profile</a>\\n    <a *ngIf=\\\"user.userType == 'Trainer' || user.userType == 'Admin'\\\" routerLink=\\\"/schedules\\\" class=\\\"btn btn-link nav-item\\\">Schedules</a>\\n    <a *ngIf=\\\"user.userType == 'Member'\\\" routerLink=\\\"/schedule/{{user.schedule.id}}\\\" class=\\\"btn btn-link nav-item\\\">My Schedule</a>\\n    <a href=\\\"#\\\" *ngIf=\\\"user.userType == 'Admin'\\\" routerLink=\\\"/admin\\\" class=\\\"btn btn-link nav-item\\\">Users</a>\\n    <a routerLink=\\\"/about_us\\\" class=\\\"btn btn-link nav-item\\\">About Us</a>\\n  </nav>\\n\\n  <label *ngIf=\\\"user.username != ''\\\" class=\\\"align-content-center\\\">Hi {{user.firstName}}</label>\\n\\n  <nav class=\\\"float-right\\\">\\n    <a *ngIf=\\\"user.username != ''\\\" class=\\\"nav-item btn btn-link\\\" (click)=\\\"logout()\\\" routerLink=\\\"/login\\\">Logout</a>\\n  </nav>\\n</header>\\n\\n<div class=\\\"container\\\">\\n  <h3 style=\\\"font-family: Cambria\\\">Contact Us</h3>\\n\\n\\n  <div class=\\\"container\\\">\\n\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-2\\\">\\n        <h6 style=\\\"font-family: Cambria\\\">Phone Number: </h6>\\n      </div>\\n      <div class=\\\"col-2\\\">\\n        <h6><b>+1(234)-567-8912</b></h6>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-2\\\">\\n        <h6 style=\\\"font-family: Cambria\\\">Email: </h6>\\n      </div>\\n      <div class=\\\"col-2\\\">\\n        <h6><b>livehealthy@healthbuddy.com</b></h6>\\n      </div>\\n    </div>\\n\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-2\\\">\\n        <h6 style=\\\"font-family: Cambria\\\">Address: </h6>\\n      </div>\\n      <div class=\\\"col-2\\\">\\n        <h6 style=\\\"font-family: Cambria\\\"><b>123 On That Street,<br>In That City, In That State, <br>In That Country, 02215</b></h6>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserServiceClient} from '../services/user.service';\nimport {Router} from '@angular/router';\nimport {ScheduleServiceClient} from '../services/schedule.service';\n\n@Component({\n  selector: 'app-contact-us',\n  templateUrl: './contact-us.component.html',\n  styleUrls: ['./contact-us.component.css']\n})\nexport class ContactUsComponent implements OnInit {\n\n  constructor(private scheduleService: ScheduleServiceClient,\n              private service: UserServiceClient,\n              private router: Router) {}\n\n  schedule;\n  user = {\n    username: '',\n    password: '',\n    userType: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    schedule: {\n      id: ''\n    }\n  };\n\n  ngOnInit() {\n    this.service\n      .profile()\n      .then(user =>\n        this.user = user);\n  }\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  day works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-day',\n  templateUrl: './day.component.html',\n  styleUrls: ['./day.component.css']\n})\nexport class DayComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  days-list works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-days-list',\n  templateUrl: './days-list.component.html',\n  styleUrls: ['./days-list.component.css']\n})\nexport class DaysListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".home {\\r\\n  background-color: lightsteelblue;\\r\\n  border-color: white;\\r\\n}\\r\\n\\r\\n.txt {\\r\\n  font-family: Calibri;\\r\\n  font: caption;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.header {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\n.footer {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\na{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\ni{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nlabel{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nbody{\\r\\n  background-image: url(\\\"http://www.baltana.com/files/wallpapers-5/Health-Quotes-HD-Wallpapers-16018.jpg\\\");\\r\\n}\\r\\n\"","module.exports = \"\\n<div class=\\\"home\\\">\\n  <header class=\\\"modal-header header\\\">\\n\\n    <nav class=\\\"navbar-dark na\\\">\\n      <a routerLink=\\\"home\\\" class=\\\"btn btn-link nav-item\\\">Home</a>\\n      <a routerLink=\\\"/login\\\" *ngIf=\\\"user.username == ''\\\" class=\\\"btn btn-link nav-item\\\">Login</a>\\n      <a *ngIf=\\\"user.username == ''\\\" routerLink=\\\"/register\\\" class=\\\"btn btn-link nav-item\\\">Register</a>\\n      <a *ngIf=\\\"user.username != ''\\\" routerLink=\\\"/profile\\\" class=\\\"btn btn-link nav-item\\\">Profile</a>\\n      <a *ngIf=\\\"user.userType == 'Trainer' || user.userType == 'Admin'\\\" routerLink=\\\"/schedules\\\" class=\\\"btn btn-link nav-item\\\">Schedules</a>\\n      <a *ngIf=\\\"user.userType == 'Member'\\\" routerLink=\\\"/schedule/{{user.schedule.id}}\\\" class=\\\"btn btn-link nav-item\\\">My Schedule</a>\\n      <a href=\\\"#\\\" *ngIf=\\\"user.userType == 'Admin'\\\" routerLink=\\\"/admin\\\" class=\\\"btn btn-link nav-item\\\">Users</a>\\n      <a routerLink=\\\"/about_us\\\" class=\\\"btn btn-link nav-item\\\">About Us</a>\\n      <a routerLink=\\\"/contact_us\\\" class=\\\"btn btn-link nav-item\\\">Contact Us</a>\\n    </nav>\\n\\n    <label *ngIf=\\\"user.username != ''\\\" class=\\\"align-content-center\\\">Hi {{user.firstName}}</label>\\n\\n    <nav class=\\\"float-right\\\">\\n      <a *ngIf=\\\"user.username != ''\\\" class=\\\"nav-item btn btn-link\\\" (click)=\\\"logout()\\\" routerLink=\\\"/login\\\">Logout</a>\\n    </nav>\\n  </header>\\n  <body>\\n    <img src=\\\"http://www.baltana.com/files/wallpapers-5/Health-Quotes-HD-Wallpapers-16018.jpg\\\" class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\">\\n    <!--<div class=\\\"col-4\\\">-->\\n      <!--<p class=\\\"txt font-italic\\\">\\\"Good nutrition is the key to good mental and physical health. Eating a balanced diet is an important part of good health for everyone. The kind and amount of food you eat affects the way you feel and how your body works.\\\"</p>-->\\n    <!--</div>-->\\n    <!--<div class=\\\"col-4\\\">-->\\n    <!--</div>-->\\n    <!--<div class=\\\"col-4\\\">-->\\n      <!--<p class=\\\"txt font-italic\\\">What are nutrients?-->\\n        <!--Nutrients are ingredients in food that help you:-->\\n\\n        <!--Grow-->\\n        <!--Repair body tissue-->\\n        <!--Build new muscle tissue.-->\\n        <!--No single food will provide you with the right amount of nutrients. By combining foods from all the different food groups, you can meet your body's daily needs.</p>-->\\n    <!--</div>-->\\n    <!--<div class=\\\"col-3\\\">-->\\n\\n    <!--</div>-->\\n\\n  </body>\\n  <footer class=\\\"modal-footer footer\\\">\\n    <i>Content on nutrition and well being taken from https://www.kidney.org/atoz/content/nutritionwyska and image taken from http://www.baltana.com/files/wallpapers-5/Health-Quotes-HD-Wallpapers-16018.jpg</i>\\n  </footer>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service';\nimport {ScheduleServiceClient} from '../services/schedule.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private scheduleService: ScheduleServiceClient,\n              private service: UserServiceClient,\n              private router: Router) {}\n\n  schedule;\n  user = {\n    username: '',\n    password: '',\n    userType: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    schedule: {\n      id: ''\n    }\n  };\n\n  ngOnInit() {\n    this.service\n      .profile()\n      .then(user =>\n        this.user = user);\n  }\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n}\n","module.exports = \".header {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\n.footer {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\na{\\r\\n  color: white;\\r\\n}\\r\\n\"","module.exports = \"\\n<header class=\\\"modal-header header\\\">\\n\\n  <nav class=\\\"navbar-dark na\\\">\\n    <a routerLink=\\\"/home\\\" class=\\\"btn btn-link\\\">Home</a>\\n    <a routerLink=\\\"/about_us\\\" class=\\\"btn btn-link nav-item\\\">About Us</a>\\n    <a routerLink=\\\"/contact_us\\\" class=\\\"btn btn-link nav-item\\\">Contact Us</a>\\n  </nav>\\n\\n</header>\\n\\n<!--reffered from https://bootsnipp.com/snippets/featured/parallax-login-form-->\\n\\n<div class=\\\"container-fluid justify-content-around\\\">\\n  <div class=\\\"row vertical-offset-100\\\">\\n    <div class=\\\"col-md-4 col-md-offset-4\\\">\\n      <div class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Login</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <fieldset>\\n              <div class=\\\"form-group\\\">\\n                <input [(ngModel)]=\\\"username\\\"\\n                       class=\\\"form-control\\\"\\n                       placeholder=\\\"Username\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <input [(ngModel)]=\\\"password\\\"\\n                       class=\\\"form-control\\\"\\n                       placeholder=\\\"Password\\\"\\n                       type=\\\"password\\\">\\n              </div>\\n              <button (click)=\\\"login(username,password)\\\" class=\\\"btn btn-lg btn-success btn-block\\\">Login</button>\\n              <br>\\n              <button href=\\\"#\\\" routerLink=\\\"/register\\\" class=\\\"btn btn-link\\\">Not a Registered User?</button>\\n            </fieldset>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-8\\\">\\n      <h3 class=\\\"h3\\\">How do I eat a healthy diet?</h3>\\n\\n      <p class=\\\"font-italic\\\">\\n        <ul>\\n      <li>Eat a variety of foods from each group and stay within the recommended servings listed.</li>\\n      <li>Choose foods that are low in fat and sugar.</li>\\n      <li>Choose and prepare foods that are low in salt.</li>\\n      <li>Learn to read and understand food labels.</li>\\n    </ul>\\n\\n      <h3>How can I make healthy choices when shopping for food?</h3>\\n      <p class=\\\"font-italic\\\">Read the Nutrition Facts Food Label, which is found on canned, frozen and packaged foods. This label:</p>\\n      <ul>\\n        <li>Lists the items that by law need to be listed on food products.</li>\\n        <li>Shows what a serving size of a food is, and how many calories and fat grams are in a serving, as well as how many calories of the food come from fat.</li>\\n        <li>Tells some important vitamins and minerals that the food provides.</li>\\n      </ul>\\n\\n      <h3>What if I have more questions?</h3>\\n      <ul>\\n        <li>Login or SignUp here today :)</li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Route, Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username;\n  password;\n\n  constructor(private router: Router,\n              private service: UserServiceClient) { }\n\n  ngOnInit() {\n  }\n\n  login(username, password) {\n    console.log([username, password]);\n    this.service\n      .login(username, password)\n      .then(response => {\n        if (response.username == null) {\n          alert('Incorrect credintials');\n        } else {\n          this.router.navigate(['home']);\n        }\n      });\n  }\n}\n","module.exports = \".header {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\n.footer {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\na{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\ni{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nlabel{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nbody{\\r\\n  background-image: url(\\\"http://www.baltana.com/files/wallpapers-5/Health-Quotes-HD-Wallpapers-16018.jpg\\\");\\r\\n}\\r\\n\"","module.exports = \"<header class=\\\"modal-header header\\\">\\n\\n  <nav class=\\\"navbar-dark na\\\">\\n    <a routerLink=\\\"home\\\" class=\\\"btn btn-link nav-item\\\">Home</a>\\n    <a routerLink=\\\"/login\\\" *ngIf=\\\"user.username == ''\\\" class=\\\"btn btn-link nav-item\\\">Login</a>\\n    <a *ngIf=\\\"user.username == ''\\\" routerLink=\\\"/register\\\" class=\\\"btn btn-link nav-item\\\">Register</a>\\n    <a *ngIf=\\\"user.username != ''\\\" routerLink=\\\"/profile\\\" class=\\\"btn btn-link nav-item\\\">Profile</a>\\n    <a *ngIf=\\\"user.userType == 'Trainer' || user.userType == 'Admin'\\\" routerLink=\\\"/schedules\\\" class=\\\"btn btn-link nav-item\\\">Schedules</a>\\n    <a *ngIf=\\\"user.userType == 'Member'\\\" routerLink=\\\"/schedule/{{user.schedule.id}}\\\" class=\\\"btn btn-link nav-item\\\">My Schedule</a>\\n    <a href=\\\"#\\\" *ngIf=\\\"user.userType == 'Admin'\\\" routerLink=\\\"/admin\\\" class=\\\"btn btn-link nav-item\\\">Users</a>\\n  </nav>\\n\\n  <label *ngIf=\\\"user.username != ''\\\" class=\\\"align-content-center\\\">Hi {{user.firstName}}</label>\\n\\n  <nav class=\\\"float-right\\\">\\n    <a *ngIf=\\\"user.username != ''\\\" class=\\\"nav-item btn btn-link\\\" (click)=\\\"logout()\\\" routerLink=\\\"/login\\\">Logout</a>\\n  </nav>\\n</header>\\n\\n<div class=\\\"container\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-8\\\">\\n      <h3>Search The Food Item To Track Nutrition</h3>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row container\\\">\\n    <div class=\\\"col-8\\\">\\n      <input [(ngModel)]=\\\"queryTerm\\\"\\n             class=\\\"form-control\\\"\\n             type='text'\\n             placeholder=\\\"Enter Search Term (Example: Pizza)\\\">\\n    </div>\\n    <div class=\\\"col-4\\\">\\n      <button title=\\\"Search\\\"\\n              class=\\\"btn btn-primary\\\"\\n              (click)=\\\"selectSearch()\\\">Search</button>\\n    </div>\\n  </div>\\n\\n\\n\\n  <div class=\\\"row\\\">\\n    <div *ngIf=\\\"toggleSearch\\\" class=\\\"container col-6\\\">\\n        <h5>Select the appropriate item from the list below</h5>\\n        <ul>\\n          <li (click)=\\\"displayDetails(food)\\\"\\n              class=\\\"list-group-item webdev btn btn-link\\\"\\n              *ngFor=\\\"let food of Foods\\\">\\n            {{food.food_name}}\\n          </li>\\n        </ul>\\n    </div>\\n\\n    <div *ngIf=\\\"toggleDetail\\\" class=\\\" container col-6\\\">\\n        <h5>Description</h5>\\n        {{food.food_description}}}\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserServiceClient} from '../services/user.service';\nimport {Router} from '@angular/router';\nimport {ScheduleServiceClient} from '../services/schedule.service';\n\n@Component({\n  selector: 'app-poc',\n  templateUrl: './poc.component.html',\n  styleUrls: ['./poc.component.css']\n})\nexport class PocComponent implements OnInit {\n\n  constructor(private scheduleService: ScheduleServiceClient,\n              private userService: UserServiceClient,\n              private router: Router) {}\n\n  schedule;\n  user = {\n    username: '',\n    password: '',\n    userType: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    schedule: {\n      id: ''\n    }\n  };\n\n  toggleSearch = false;\n  toggleDetail = false;\n  queryTerm: String;\n  Foods = [];\n  food;\n\n\n  ngOnInit() {\n    this.userService\n      .profile()\n      .then(user =>\n        this.user = user);\n  }\n\n  logout() {\n    this.userService\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n\n  selectSearch() {\n    this.toggleSearch = true;\n    this.toggleDetail = false;\n    console.log(this.queryTerm);\n    this.service()\n      .then(Foods => {\n        this.Foods = Foods;\n      });\n    console.log(this.Foods);\n  }\n\n  service() {\n    return fetch('https://powerful-basin-21524.herokuapp.com/api/poc/' + this.queryTerm)\n      .then(response => response.json());\n  }\n\n  displayDetails(food) {\n    this.toggleDetail = true;\n    console.log(food.food_name);\n    this.food = food;\n  }\n\n}\n","module.exports = \".header {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\n.footer {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\na{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\ni{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nlabel{\\r\\n  color: black;\\r\\n}\\r\\n\\r\\nbody{\\r\\n  background-image: url(\\\"http://www.baltana.com/files/wallpapers-5/Health-Quotes-HD-Wallpapers-16018.jpg\\\");\\r\\n}\\r\\n\"","module.exports = \"<div>\\n\\n  <header class=\\\"modal-header header\\\">\\n\\n    <nav class=\\\"navbar-dark na\\\">\\n      <a routerLink=\\\"home\\\" class=\\\"btn btn-link nav-item\\\">Home</a>\\n      <a routerLink=\\\"/login\\\" *ngIf=\\\"user.username == ''\\\" class=\\\"btn btn-link nav-item\\\">Login</a>\\n      <a *ngIf=\\\"user.username == ''\\\" routerLink=\\\"/register\\\" class=\\\"btn btn-link nav-item\\\">Register</a>\\n      <a *ngIf=\\\"user.userType == 'Trainer' || user.userType == 'Admin'\\\" routerLink=\\\"/schedules\\\" class=\\\"btn btn-link nav-item\\\">Schedules</a>\\n      <a *ngIf=\\\"user.userType == 'Member'\\\" routerLink=\\\"/schedule/{{user.schedule.id}}\\\" class=\\\"btn btn-link nav-item\\\">My Schedule</a>\\n      <a href=\\\"#\\\" *ngIf=\\\"user.userType == 'Admin'\\\" routerLink=\\\"/admin\\\" class=\\\"btn btn-link nav-item\\\">Users</a>\\n    </nav>\\n\\n    <label *ngIf=\\\"user.username != ''\\\" class=\\\"align-content-center\\\">Hi {{user.firstName}}</label>\\n\\n    <nav class=\\\"float-right\\\">\\n      <a *ngIf=\\\"user.username != ''\\\" class=\\\"nav-item btn btn-link\\\" (click)=\\\"logout()\\\" routerLink=\\\"/login\\\">Logout</a>\\n    </nav>\\n  </header>\\n<div class=\\\"container\\\">\\n  <h1>Profile</h1>\\n<div class=\\\"form-group\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-4\\\">\\n      <label>Username:</label><br>\\n      <label>First Name:</label><br>\\n      <label>Last Name:</label><br>\\n      <label>Password:</label><br>\\n      <label>Email ID:</label><br>\\n    </div>\\n    <div class=\\\"col-8\\\">\\n      {{user.username}}\\n      <input [(ngModel)]=\\\"user.firstName\\\"\\n             id=\\\"firstName\\\"\\n             placeholder=\\\"first name\\\"\\n             class=\\\"form-control\\\"/>\\n      <input [(ngModel)]=\\\"user.lastName\\\"\\n             placeholder=\\\"lastName\\\"\\n             class=\\\"form-control\\\"/>\\n      <input [(ngModel)]=\\\"user.password\\\"\\n             placeholder=\\\"password\\\"\\n             class=\\\"form-control\\\"\\n             type=\\\"password\\\"/>\\n      <input [(ngModel)]=\\\"user.email\\\"\\n             placeholder=\\\"email\\\"\\n             class=\\\"form-control\\\"/>\\n\\n    </div>\\n  </div>\\n  </div>\\n\\n  <button (click)=\\\"update()\\\" class=\\\"btn btn-primary\\\">\\n    Update\\n  </button>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserServiceClient} from '../services/user.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private service: UserServiceClient,\n              private router: Router) {}\n  user = {\n    username: '',\n    password: '',\n    userType: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    schedule: {\n      id: ''\n    }\n  }\n\n  ngOnInit() {\n    this.service\n      .profile()\n      .then(user =>\n        this.user = user);\n  }\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n\n  update() {\n    this.service.updateUser(this.user)\n      .then(() => this.ngOnInit());\n  }\n}\n","module.exports = \".header {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\nfooter {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\na{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\ni{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nlabel{\\r\\n  color: black;\\r\\n}\\r\\n\\r\\nbody{\\r\\n  background-image: url(\\\"http://www.baltana.com/files/wallpapers-5/Health-Quotes-HD-Wallpapers-16018.jpg\\\");\\r\\n}\\r\\n\"","module.exports = \"<header class=\\\"modal-header header\\\">\\n\\n  <nav class=\\\"navbar-dark na\\\">\\n    <a routerLink=\\\"home\\\" class=\\\"btn btn-link nav-item\\\">Home</a>\\n    <a routerLink=\\\"/login\\\" class=\\\"btn btn-link nav-item\\\">Login</a>\\n    <a routerLink=\\\"/about_us\\\" class=\\\"btn btn-link nav-item\\\">About Us</a>\\n    <a routerLink=\\\"/contact_us\\\" class=\\\"btn btn-link nav-item\\\">Contact Us</a>\\n  </nav>\\n\\n\\n</header>\\n<br>\\n\\n\\n<div class=\\\"container col-8\\\">\\n\\n  <h1 align=\\\"center\\\">Register New User</h1>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"username\\\">Username:</label>\\n    <input [(ngModel)]=\\\"user.username\\\"\\n           placeholder=\\\"Enter Username\\\"\\n           class=\\\"form-control\\\" id=\\\"username\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"firstname\\\">First Name:</label>\\n    <input [(ngModel)]=\\\"user.firstName\\\"\\n           placeholder=\\\"Enter First Name\\\"\\n           class=\\\"form-control\\\" id=\\\"firstname\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"lastname\\\">Last Name:</label>\\n    <input [(ngModel)]=\\\"user.lastName\\\"\\n           placeholder=\\\"Enter Last Name\\\"\\n           class=\\\"form-control\\\" id=\\\"lastname\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"usertype\\\">User Type:</label>\\n    <select [(ngModel)]=\\\"user.userType\\\"\\n            class=\\\"form-control\\\" id=\\\"usertype\\\">\\n      <option class=\\\"form-control\\\">Trainer</option>\\n      <option class=\\\"form-control\\\">Member</option>\\n    </select>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"password\\\">Password:</label>\\n    <input [(ngModel)]=\\\"user.password\\\"\\n           placeholder=\\\"Enter Password\\\"\\n           class=\\\"form-control\\\"\\n           type=\\\"password\\\" id=\\\"password\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"password2\\\">Verify Password:</label>\\n    <input [(ngModel)]=\\\"password2\\\"\\n           placeholder=\\\"Re-enter Password\\\"\\n           class=\\\"form-control\\\"\\n           type=\\\"password\\\" id=\\\"password2\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"email\\\">Email ID:</label>\\n    <input [(ngModel)]=\\\"user.email\\\"\\n           placeholder=\\\"Enter Email ID\\\"\\n           class=\\\"form-control\\\" id=\\\"email\\\"/>\\n  </div>\\n  <button (click)=\\\"register(user, password2)\\\"\\n          class=\\\"btn btn-primary\\\">\\n    Register\\n  </button>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service';\nimport {ScheduleServiceClient} from '../services/schedule.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private router: Router,\n              private service: UserServiceClient) { }\n\n  user = {\n    username: '',\n    password: '',\n    userType: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    schedule: {}\n  };\n  password2;\n\n  ngOnInit() {\n  }\n\n  register(user, password2) {\n    if (user.password !== password2) {\n      alert('passwords does not match');\n    } else {\n      this.service\n        .register(user)\n        .then(response => {\n          if (response.username == null) {\n            alert('username already exists');\n          } else {\n            this.router.navigate(['home']);\n          }\n        });\n    }\n  }\n}\n","module.exports = \".header {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\nfooter {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\na{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\ni{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nlabel{\\r\\n  color: black;\\r\\n}\\r\\n\\r\\nbody{\\r\\n  background-image: url(\\\"http://www.baltana.com/files/wallpapers-5/Health-Quotes-HD-Wallpapers-16018.jpg\\\");\\r\\n}\\r\\n\"","module.exports = \"\\n<header class=\\\"modal-header header\\\">\\n\\n  <nav class=\\\"navbar-dark na\\\">\\n    <a routerLink=\\\"home\\\" class=\\\"btn btn-link nav-item\\\">Home</a>\\n    <a *ngIf=\\\"user.username != ''\\\" routerLink=\\\"/profile\\\" class=\\\"btn btn-link nav-item\\\">Profile</a>\\n    <a *ngIf=\\\"user.userType == 'Admin'\\\" routerLink=\\\"/admin\\\" class=\\\"btn btn-link nav-item\\\">Users</a>\\n  </nav>\\n\\n  <label *ngIf=\\\"user.username != ''\\\" class=\\\"align-content-center\\\">Hi {{user.firstName}}</label>\\n\\n  <nav class=\\\"float-right\\\">\\n    <a *ngIf=\\\"user.username != ''\\\" class=\\\"nav-item btn btn-link\\\" (click)=\\\"logout()\\\" routerLink=\\\"/login\\\">Logout</a>\\n  </nav>\\n</header>\\n<br>\\n<div class=\\\"container justify-content-around align-content-center\\\">\\n  <h3 align=\\\"left\\\"> Member Schedule List</h3>\\n  <br>\\n\\n  <div class=\\\"card-deck card-group\\\">\\n    <div *ngFor=\\\"let schedule of schedules\\\">\\n      <div *ngIf=\\\"schedule.title != null\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\">{{schedule.title}}</h5>\\n            <a routerLink='/schedule/{{schedule.id}}' class=\\\"btn btn-primary\\\">Edit Schedule</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ScheduleServiceClient} from '../services/schedule.service';\nimport {UserServiceClient} from '../services/user.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-schedule-list',\n  templateUrl: './schedule-list.component.html',\n  styleUrls: ['./schedule-list.component.css']\n})\nexport class ScheduleListComponent implements OnInit {\n\n  constructor(private userService: UserServiceClient,\n              private service: ScheduleServiceClient,\n              private router: Router) { }\n\n  user = {\n    username: '',\n    password: '',\n    userType: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    schedule: {\n      id: ''\n    }\n  }\n  schedules;\n\n  ngOnInit() {\n    this.service.findAllSchedules()\n      .then(schedules => this.schedules = schedules);\n    this.userService\n      .profile()\n      .then(user =>\n        this.user = user);\n  }\n\n  logout() {\n    this.userService\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n}\n","module.exports = \".header {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\n.footer {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\na{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\na.day{\\r\\n  color: blue;\\r\\n}\\r\\n\\r\\ni{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nlabel{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nbody{\\r\\n  background-image: url(\\\"http://www.baltana.com/files/wallpapers-5/Health-Quotes-HD-Wallpapers-16018.jpg\\\");\\r\\n}\\r\\n\"","module.exports = \"<header class=\\\"modal-header header\\\">\\r\\n\\r\\n  <nav class=\\\"navbar-dark na\\\">\\r\\n    <a routerLink=\\\"home\\\" class=\\\"btn btn-link nav-item\\\">Home</a>\\r\\n    <a *ngIf=\\\"user.username != ''\\\" routerLink=\\\"/profile\\\" class=\\\"btn btn-link nav-item\\\">Profile</a>\\r\\n    <a *ngIf=\\\"user.userType == 'Trainer' || user.userType == 'Admin'\\\" routerLink=\\\"/schedules\\\" class=\\\"btn btn-link nav-item\\\">Schedules</a>\\r\\n    <a href=\\\"#\\\" *ngIf=\\\"user.userType == 'Admin'\\\" routerLink=\\\"/admin\\\" class=\\\"btn btn-link nav-item\\\">Users</a>\\r\\n  </nav>\\r\\n\\r\\n  <label *ngIf=\\\"user.username != ''\\\" class=\\\"align-content-center\\\">Hi {{user.firstName}}</label>\\r\\n\\r\\n  <nav class=\\\"float-right\\\">\\r\\n    <a *ngIf=\\\"user.username != ''\\\" class=\\\"nav-item btn btn-link\\\" (click)=\\\"logout()\\\" routerLink=\\\"/login\\\">Logout</a>\\r\\n  </nav>\\r\\n</header>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\" container col-4\\\">\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <h4>User Requirements</h4>\\r\\n        <div *ngIf=\\\"user.userType == 'Member' || user.userType == 'Admin'\\\">\\r\\n          <textarea [(ngModel)]=\\\"schedule.userRequirements\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"Enter Requirements\\\">\\r\\n\\r\\n          </textarea>\\r\\n          <button (click)=\\\"saveSchedule()\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"user.userType == 'Trainer'\\\">\\r\\n          {{schedule.userRequirements}}\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-control container\\\">\\r\\n      <h4>Recommended Nutrition</h4>\\r\\n        <div *ngIf=\\\"user.userType == 'Trainer' || user.userType == 'Admin'\\\">\\r\\n      <ul>\\r\\n        <li>Calories: <input [(ngModel)]=\\\"schedule.calories\\\" type=\\\"text\\\" class=\\\"form-control\\\"></li>\\r\\n        <li>Proteins: <input [(ngModel)]=\\\"schedule.proteins\\\" type=\\\"text\\\" class=\\\"form-control\\\"></li>\\r\\n        <li>Fats: <input [(ngModel)]=\\\"schedule.fats\\\" type=\\\"text\\\" class=\\\"form-control\\\"></li>\\r\\n        <li>Carbohydrates: <input [(ngModel)]=\\\"schedule.carbohydrates\\\" type=\\\"text\\\" class=\\\"form-control\\\"></li>\\r\\n        <button (click)=\\\"saveSchedule()\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n      </ul>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"user.userType == 'Member'\\\">\\r\\n          <ul>\\r\\n            <li>Calories: {{schedule.calories}}</li>\\r\\n            <li>Proteins: {{schedule.proteins}}</li>\\r\\n            <li>Fats: {{schedule.fats}}</li>\\r\\n            <li>Carbohydrates: {{schedule.carbohydrates}}</li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"user.userType == 'Member' || user.userType == 'Admin'\\\"\\r\\n           class=\\\"form-control container\\\">\\r\\n        <button routerLink=\\\"/schedule/{{scheduleId}}/poc\\\" class=\\\"btn btn-success\\\">Nutrition Teller App</button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-8 container\\\">\\r\\n      <h4>Schedule For {{days.length}} Days</h4>\\r\\n      <ul class=\\\"nav nav-tabs\\\">\\r\\n        <li *ngFor=\\\"let day of days; let i = index\\\"\\r\\n            class=\\\"nav-item nav\\\">\\r\\n          <a routerLink=\\\"/schedule/{{scheduleId}}/day/{{day.id}}/widget\\\" class=\\\"btn btn-link day nav-link\\\">\\r\\n            Day {{i+1}}\\r\\n          </a>\\r\\n          <button (click)=\\\"deleteDay(day.id)\\\" style=\\\"color: red\\\" class=\\\"btn btn-link btn-sm\\\">X</button>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"user.userType == 'Trainer' || user.userType == 'Admin'\\\"><button (click)=\\\"createDay(scheduleId)\\\" class=\\\"btn\\\">+</button></li>\\r\\n      </ul>\\r\\n      <app-widget-list></app-widget-list>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport {DayServiceClient} from '../services/day.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service';\nimport {ScheduleServiceClient} from '../services/schedule.service';\n\n@Component({\n  selector: 'app-schedule',\n  templateUrl: './schedule.component.html',\n  styleUrls: ['./schedule.component.css']\n})\nexport class ScheduleComponent implements OnInit {\n\n  constructor(private scheduleService: ScheduleServiceClient,\n              private dayService: DayServiceClient,\n              private service: UserServiceClient,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  scheduleId;\n  days;\n\n  schedule;\n\n  user = {\n    username: '',\n    password: '',\n    userType: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    schedule: {}\n  };\n\n  setParams(params) {\n    this.scheduleId = params['scheduleId'];\n    this.loadDays();\n  }\n\n  loadDays() {\n    console.log(this.scheduleId);\n    this.dayService.findAllDaysForSchedule(this.scheduleId)\n      .then(days => this.days = days);\n  }\n\n  ngOnInit() {\n    this.service\n      .profile()\n      .then(user =>\n        this.user = user);\n    this.scheduleService.findScheduleById(this.scheduleId)\n      .then(schedule => this.schedule = schedule);\n  }\n\n  createDay(scheduleId) {\n    this.dayService.createDay(scheduleId)\n      .then(response => this.router.navigate(['schedule/' + this.scheduleId + '/day/' + response.id + '/widget']));\n  }\n\n  saveSchedule() {\n    this.scheduleService.saveSchedule(this.schedule);\n  }\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n\n  deleteDay(dayId) {\n    this.dayService.deleteDay(dayId)\n      .then(() => this.router.navigate(['schedule/' + this.scheduleId]));\n  }\n}\n","export class DayServiceClient {\r\n\r\n  SCHEDULE_URL = 'https://quiet-fjord-77462.herokuapp.com';\r\n\r\n  findAllDaysForSchedule(scheduleId) {\r\n    return fetch(this.SCHEDULE_URL + '/api/schedule/' + scheduleId + '/day')\r\n      .then(response => response.json());\r\n  }\r\n\r\n  createDay(scheduleId) {\r\n    const day = {};\r\n    return fetch(this.SCHEDULE_URL + '/api/schedule/' + scheduleId + '/day', {\r\n      method: 'post',\r\n      body: JSON.stringify(day),\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n\r\n  deleteDay(dayId) {\r\n    return fetch(this.SCHEDULE_URL + '/api/day/' + dayId, {\r\n      method: 'delete'\r\n    }).then(response => response.json);\r\n  }\r\n}\r\n","export class ScheduleServiceClient {\r\n\r\n  SCHEDULE_URL = 'https://quiet-fjord-77462.herokuapp.com/api/schedule';\r\n\r\n  findAllSchedules() {\r\n    return fetch(this.SCHEDULE_URL)\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findScheduleById(scheduleId) {\r\n    return fetch(this.SCHEDULE_URL + '/' + scheduleId)\r\n      .then(response => response.json());\r\n  }\r\n\r\n  saveSchedule(schedule) {\r\n    return fetch(this.SCHEDULE_URL, {\r\n      method: 'post',\r\n      body: JSON.stringify(schedule),\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n}\r\n","export class UserServiceClient {\r\n\r\n  URL = 'https://quiet-fjord-77462.herokuapp.com';\r\n\r\n  finAllUsers() {\r\n    return fetch(this.URL + '/api/user')\r\n      .then(response => response.json());\r\n  }\r\n\r\n  login(username, password) {\r\n    const userCredentials = {\r\n      username: username,\r\n      password: password\r\n    };\r\n    return fetch(this.URL + '/api/login', {\r\n      body: JSON.stringify(userCredentials),\r\n      method: 'post',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n\r\n  logout() {\r\n    return fetch(this.URL + '/api/logout', {\r\n      method: 'delete'\r\n    });\r\n  }\r\n\r\n  profile() {\r\n    return fetch(this.URL + '/api/profile')\r\n      .then(response => response.json());\r\n  }\r\n\r\n  register(user) {\r\n    return fetch(this.URL + '/api/register', {\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(user),\r\n      method: 'post'\r\n    }).then(respose => respose.json());\r\n  }\r\n\r\n  updateUser(user) {\r\n    return fetch(this.URL + '/api/user/update', {\r\n      body: JSON.stringify(user),\r\n      method: 'post',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n\r\n  registerUserByAdmin(user) {\r\n    return fetch(this.URL + '/api/register/admin', {\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(user),\r\n      method: 'post'\r\n    }).then(respose => respose.json());\r\n  }\r\n\r\n  updateUserByAdmin(user) {\r\n    return fetch(this.URL + '/api/user/update/admin', {\r\n      body: JSON.stringify(user),\r\n      method: 'post',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n\r\n  deleteUser(id) {\r\n    return fetch(this.URL + '/api/user/' + id, {\r\n      method: 'delete'\r\n    });\r\n  }\r\n}\r\n","export class WidgetServiceClient {\r\n\r\n  URL = 'https://quiet-fjord-77462.herokuapp.com';\r\n\r\n  findAllWidgetsForDay(dayId) {\r\n    return fetch(this.URL + '/api/day/' + dayId + '/widget')\r\n      .then(response => response.json());\r\n  }\r\n\r\n  createWidget(dayId) {\r\n    const widget = {};\r\n    return fetch(this.URL + '/api/day/' + dayId + '/widget', {\r\n      method: 'post',\r\n      body: JSON.stringify(widget),\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n\r\n  saveWidgets(widgets, dayId) {\r\n    return fetch(this.URL + '/api/day/' + dayId + '/widget/save', {\r\n      method: 'post',\r\n      body: JSON.stringify(widgets),\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n\r\n  deleteWidget(id) {\r\n    return fetch(this.URL + '/api/widget/' + id, {\r\n      method: 'delete'\r\n    }).then(response => response.json());\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"\\n<div *ngFor=\\\"let widget of widgets\\\">\\n  <div *ngIf=\\\"user.userType == 'Trainer' || user.userType == 'Admin'\\\">\\n    <textarea [(ngModel)] = \\\"widget.text\\\"\\n              class=\\\"form-control\\\">\\n\\n    </textarea>\\n    <button routerLink=\\\"/schedule/{{scheduleId}}\\\"\\n            style=\\\"color: red\\\"\\n            class=\\\"btn btn-link\\\"\\n            (click)=\\\"deleteWidget(widget.id)\\\">\\n      X\\n    </button>\\n  </div>\\n  <div *ngIf=\\\"user.userType == 'Member'\\\">\\n    <ul>\\n      <li>\\n        {{widget.text}}\\n      </li>\\n    </ul>\\n  </div>\\n\\n</div>\\n<div *ngIf=\\\"user.userType == 'Trainer' || user.userType == 'Admin'\\\">\\n  <button (click)=\\\"addWidget(dayId)\\\"\\n          class=\\\"btn btn-link\\\">Add New Description</button>\\n  <button (click)=\\\"saveWidgets()\\\"\\n          class=\\\"btn btn-primary\\\">Save</button>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {WidgetServiceClient} from '../services/widget.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service';\n\n@Component({\n  selector: 'app-widget-list',\n  templateUrl: './widget-list.component.html',\n  styleUrls: ['./widget-list.component.css']\n})\nexport class WidgetListComponent implements OnInit {\n\n  constructor(private userService: UserServiceClient,\n              private service: WidgetServiceClient,\n              private route: ActivatedRoute,\n              private router: Router) {\n  this.route.params.subscribe(\n    params => this.setParams(params));\n}\n\n  scheduleId;\n  dayId;\n  widgets = [];\n  user = {\n    username: '',\n    password: '',\n    userType: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    schedule: {\n      id: ''\n    }\n  }\n\n  ngOnInit() {\n    this.userService\n      .profile()\n      .then(user =>\n        this.user = user);\n  }\n\n  setParams(params) {\n    this.dayId = params['dayId'];\n    this.scheduleId = params['scheduleId'];\n    this.loadWidgets();\n  }\n\n  loadWidgets() {\n    this.service.findAllWidgetsForDay(this.dayId)\n      .then(widgets => this.widgets = widgets);\n  }\n\n  addWidget(dayId) {\n    this.service.createWidget(dayId)\n      .then(() => this.loadWidgets());\n  }\n\n  saveWidgets() {\n    this.service.saveWidgets(this.widgets, this.dayId)\n      .then(() => this.loadWidgets());\n  }\n\n  deleteWidget(id) {\n    this.service.deleteWidget(id)\n      .then(() => this.router.navigate['schedule/' + this.scheduleId + '/day/' + this.dayId + '/widget']);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}